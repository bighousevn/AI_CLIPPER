name: Go Backend CI/CD

on:
  push:
    branches: ["main"]
    paths:
      - "server/**"
  pull_request:
    branches: ["main"]
    paths:
      - "server/**"

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"
          cache-dependency-path: server/go.sum

      - name: Install Dependencies
        run: go mod tidy

      - name: Run tests
        run: go test -v ./...

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run linter
        run: golangci-lint run --path-prefix=./server

  security-scan:
    runs-on: ubuntu-latest
    needs: test-and-lint
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: "go"

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: security-scan
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Scan for vulnerabilities before build
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs" # Scan filesystem (source code and dependencies)
          scan-ref: "."
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"
          scanners: "vuln,secret"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ai-clipper-go-be:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
